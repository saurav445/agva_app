// ... (previous code)

class _DeviceDetailsState extends State<DeviceDetails> {
  late String deviceId;

  bool isAddedToFocus = false;


  Future<String?> getToken() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    String? mytoken = prefs.getString('mytoken');
    print('Saved Token: $mytoken');
    return mytoken;
  }

  void getProductionDetails() async {

  }


  void toggleFocus() async {
    String? token = await getToken();
    if (token != null) {
      if (isAddedToFocus) {
        // Remove from focus
        await http.delete(
          Uri.parse('$removeFromFocus/$deviceId'),
          headers: {
            "Authorization": 'Bearer $token',
          },
        );
      } else {
   
        await http.put(
          Uri.parse('$addToFocus/$deviceId'),
          headers: {
            "Authorization": 'Bearer $token',
          },
        );
      }

      setState(() {
        isAddedToFocus = !isAddedToFocus;
      });
    }
  }

  @override
  void initState() {

  }



  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        backgroundColor: Colors.black,
        appBar: AppBar(

        ),
        body: Stack(
          children: [
            SingleChildScrollView(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [


                  // ADD TO FOCUS button
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.01,
                  ),
                  Container(
                    decoration: BoxDecoration(
                      borderRadius: BorderRadius.circular(5),
                      color: isAddedToFocus
                          ? Colors.red 
                          : Color.fromARGB(255, 174, 34, 104),
                    ),
                    child: Padding(
                      padding: const EdgeInsets.only(left: 8),
                      child: Container(
                        height: MediaQuery.of(context).size.height * 0.065,
                        width: 170,
                        decoration: BoxDecoration(
                          borderRadius: BorderRadius.only(
                            topRight: Radius.circular(5),
                            bottomRight: Radius.circular(5),
                          ),
                          color: Color.fromARGB(255, 82, 82, 82),
                        ),
                        child: TextButton(
                          onPressed: toggleFocus,
                          style: TextButton.styleFrom(),
                          child: Text(
                            isAddedToFocus ? "REMOVE FROM FOCUS" : "ADD TO FOCUS",
                            style: TextStyle(
                              color: Colors.white,
                              fontSize:
                                  MediaQuery.of(context).size.width * 0.045,
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
